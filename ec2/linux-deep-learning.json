{
    "Description": "Cloud formation template for Linux Deep Learning desktop",
    "Parameters": {
        "AMI": {
            "Default": "ami-0b63040ee445728bf",
            "Description": "Deep Learning AMI (Ubuntu) Version 17.0",
            "Type": "String"
        },
        "EBSVolumeSize": {
            "Default": "140",
            "Description": "The size of the EBS volume",
            "Type": "String"
        },
        "InstanceName": {
            "Default": "deeplearn",
            "Description": "EC2 Instance Name",
            "Type": "String"
        },
        "InstanceType": {
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",			
                "t3.micro",
                "t3.small",
                "t3.medium",
                "t3.large",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type",
            "Default": "t3.medium",
            "Description": "EC2 instance type",
            "Type": "String"
        },
        "KeyName": {
            "Default": "",		
            "ConstraintDescription": "Must be the name of an existing EC2 KeyPair.",
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to NAT instances.",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "Subnet": {
            "Default": "",			
            "ConstraintDescription": "Must be a valid Subnet.",
            "Description": "The subnet to place the instance in...",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "VPC": {
            "Default": "",			
            "ConstraintDescription": "Must be a valid VPC.",
            "Description": "The VPC to deploy to...",
            "Type": "AWS::EC2::VPC::Id"
        }
    },
    "Mappings" : {
        "Region2Examples" : {
          "us-east-1"      : { "Examples" : "https://s3.amazonaws.com/cloudformation-examples-us-east-1" },
          "us-west-2"      : { "Examples" : "https://s3-us-west-2.amazonaws.com/cloudformation-examples-us-west-2" },
          "us-west-1"      : { "Examples" : "https://s3-us-west-1.amazonaws.com/cloudformation-examples-us-west-1" },
          "eu-west-1"      : { "Examples" : "https://s3-eu-west-1.amazonaws.com/cloudformation-examples-eu-west-1" },
          "eu-west-2"      : { "Examples" : "https://s3-eu-west-2.amazonaws.com/cloudformation-examples-eu-west-2" },
          "eu-west-3"      : { "Examples" : "https://s3-eu-west-3.amazonaws.com/cloudformation-examples-eu-west-3" },
          "eu-central-1"   : { "Examples" : "https://s3-eu-central-1.amazonaws.com/cloudformation-examples-eu-central-1" },
          "ap-southeast-1" : { "Examples" : "https://s3-ap-southeast-1.amazonaws.com/cloudformation-examples-ap-southeast-1" },
          "ap-northeast-1" : { "Examples" : "https://s3-ap-northeast-1.amazonaws.com/cloudformation-examples-ap-northeast-1" },
          "ap-northeast-2" : { "Examples" : "https://s3-ap-northeast-2.amazonaws.com/cloudformation-examples-ap-northeast-2" },
          "ap-northeast-3" : { "Examples" : "https://s3-ap-northeast-3.amazonaws.com/cloudformation-examples-ap-northeast-3" },
          "ap-southeast-2" : { "Examples" : "https://s3-ap-southeast-2.amazonaws.com/cloudformation-examples-ap-southeast-2" },
          "ap-south-1"     : { "Examples" : "https://s3-ap-south-1.amazonaws.com/cloudformation-examples-ap-south-1" },
          "us-east-2"      : { "Examples" : "https://s3-us-east-2.amazonaws.com/cloudformation-examples-us-east-2" },
          "ca-central-1"   : { "Examples" : "https://s3-ca-central-1.amazonaws.com/cloudformation-examples-ca-central-1" },
          "sa-east-1"      : { "Examples" : "https://s3-sa-east-1.amazonaws.com/cloudformation-examples-sa-east-1" },
          "cn-north-1"     : { "Examples" : "https://s3.cn-north-1.amazonaws.com.cn/cloudformation-examples-cn-north-1" },
          "cn-northwest-1" : { "Examples" : "https://s3.cn-northwest-1.amazonaws.com.cn/cloudformation-examples-cn-northwest-1" }
        },
        "AWSInstanceType2Arch" : {
          "t1.micro"    : { "Arch" : "HVM64"  },
          "t2.nano"     : { "Arch" : "HVM64"  },
          "t2.micro"    : { "Arch" : "HVM64"  },
          "t2.small"    : { "Arch" : "HVM64"  },
          "t2.medium"   : { "Arch" : "HVM64"  },
          "t2.large"    : { "Arch" : "HVM64"  },
          "m1.small"    : { "Arch" : "HVM64"  },
          "m1.medium"   : { "Arch" : "HVM64"  },
          "m1.large"    : { "Arch" : "HVM64"  },
          "m1.xlarge"   : { "Arch" : "HVM64"  },
          "m2.xlarge"   : { "Arch" : "HVM64"  },
          "m2.2xlarge"  : { "Arch" : "HVM64"  },
          "m2.4xlarge"  : { "Arch" : "HVM64"  },
          "m3.medium"   : { "Arch" : "HVM64"  },
          "m3.large"    : { "Arch" : "HVM64"  },
          "m3.xlarge"   : { "Arch" : "HVM64"  },
          "m3.2xlarge"  : { "Arch" : "HVM64"  },
          "m4.large"    : { "Arch" : "HVM64"  },
          "m4.xlarge"   : { "Arch" : "HVM64"  },
          "m4.2xlarge"  : { "Arch" : "HVM64"  },
          "m4.4xlarge"  : { "Arch" : "HVM64"  },
          "m4.10xlarge" : { "Arch" : "HVM64"  },
          "c1.medium"   : { "Arch" : "HVM64"  },
          "c1.xlarge"   : { "Arch" : "HVM64"  },
          "c3.large"    : { "Arch" : "HVM64"  },
          "c3.xlarge"   : { "Arch" : "HVM64"  },
          "c3.2xlarge"  : { "Arch" : "HVM64"  },
          "c3.4xlarge"  : { "Arch" : "HVM64"  },
          "c3.8xlarge"  : { "Arch" : "HVM64"  },
          "c4.large"    : { "Arch" : "HVM64"  },
          "c4.xlarge"   : { "Arch" : "HVM64"  },
          "c4.2xlarge"  : { "Arch" : "HVM64"  },
          "c4.4xlarge"  : { "Arch" : "HVM64"  },
          "c4.8xlarge"  : { "Arch" : "HVM64"  },
          "g2.2xlarge"  : { "Arch" : "HVMG2"  },
          "g2.8xlarge"  : { "Arch" : "HVMG2"  },
          "r3.large"    : { "Arch" : "HVM64"  },
          "r3.xlarge"   : { "Arch" : "HVM64"  },
          "r3.2xlarge"  : { "Arch" : "HVM64"  },
          "r3.4xlarge"  : { "Arch" : "HVM64"  },
          "r3.8xlarge"  : { "Arch" : "HVM64"  },
          "i2.xlarge"   : { "Arch" : "HVM64"  },
          "i2.2xlarge"  : { "Arch" : "HVM64"  },
          "i2.4xlarge"  : { "Arch" : "HVM64"  },
          "i2.8xlarge"  : { "Arch" : "HVM64"  },
          "d2.xlarge"   : { "Arch" : "HVM64"  },
          "d2.2xlarge"  : { "Arch" : "HVM64"  },
          "d2.4xlarge"  : { "Arch" : "HVM64"  },
          "d2.8xlarge"  : { "Arch" : "HVM64"  },
          "hi1.4xlarge" : { "Arch" : "HVM64"  },
          "hs1.8xlarge" : { "Arch" : "HVM64"  },
          "cr1.8xlarge" : { "Arch" : "HVM64"  },
          "cc2.8xlarge" : { "Arch" : "HVM64"  }
        },
        "AWSInstanceType2NATArch" : {
          "t1.micro"    : { "Arch" : "NATHVM64"  },
          "t2.nano"     : { "Arch" : "NATHVM64"  },
          "t2.micro"    : { "Arch" : "NATHVM64"  },
          "t2.small"    : { "Arch" : "NATHVM64"  },
          "t2.medium"   : { "Arch" : "NATHVM64"  },
          "t2.large"    : { "Arch" : "NATHVM64"  },
          "m1.small"    : { "Arch" : "NATHVM64"  },
          "m1.medium"   : { "Arch" : "NATHVM64"  },
          "m1.large"    : { "Arch" : "NATHVM64"  },
          "m1.xlarge"   : { "Arch" : "NATHVM64"  },
          "m2.xlarge"   : { "Arch" : "NATHVM64"  },
          "m2.2xlarge"  : { "Arch" : "NATHVM64"  },
          "m2.4xlarge"  : { "Arch" : "NATHVM64"  },
          "m3.medium"   : { "Arch" : "NATHVM64"  },
          "m3.large"    : { "Arch" : "NATHVM64"  },
          "m3.xlarge"   : { "Arch" : "NATHVM64"  },
          "m3.2xlarge"  : { "Arch" : "NATHVM64"  },
          "m4.large"    : { "Arch" : "NATHVM64"  },
          "m4.xlarge"   : { "Arch" : "NATHVM64"  },
          "m4.2xlarge"  : { "Arch" : "NATHVM64"  },
          "m4.4xlarge"  : { "Arch" : "NATHVM64"  },
          "m4.10xlarge" : { "Arch" : "NATHVM64"  },
          "c1.medium"   : { "Arch" : "NATHVM64"  },
          "c1.xlarge"   : { "Arch" : "NATHVM64"  },
          "c3.large"    : { "Arch" : "NATHVM64"  },
          "c3.xlarge"   : { "Arch" : "NATHVM64"  },
          "c3.2xlarge"  : { "Arch" : "NATHVM64"  },
          "c3.4xlarge"  : { "Arch" : "NATHVM64"  },
          "c3.8xlarge"  : { "Arch" : "NATHVM64"  },
          "c4.large"    : { "Arch" : "NATHVM64"  },
          "c4.xlarge"   : { "Arch" : "NATHVM64"  },
          "c4.2xlarge"  : { "Arch" : "NATHVM64"  },
          "c4.4xlarge"  : { "Arch" : "NATHVM64"  },
          "c4.8xlarge"  : { "Arch" : "NATHVM64"  },
          "g2.2xlarge"  : { "Arch" : "NATHVMG2"  },
          "g2.8xlarge"  : { "Arch" : "NATHVMG2"  },
          "r3.large"    : { "Arch" : "NATHVM64"  },
          "r3.xlarge"   : { "Arch" : "NATHVM64"  },
          "r3.2xlarge"  : { "Arch" : "NATHVM64"  },
          "r3.4xlarge"  : { "Arch" : "NATHVM64"  },
          "r3.8xlarge"  : { "Arch" : "NATHVM64"  },
          "i2.xlarge"   : { "Arch" : "NATHVM64"  },
          "i2.2xlarge"  : { "Arch" : "NATHVM64"  },
          "i2.4xlarge"  : { "Arch" : "NATHVM64"  },
          "i2.8xlarge"  : { "Arch" : "NATHVM64"  },
          "d2.xlarge"   : { "Arch" : "NATHVM64"  },
          "d2.2xlarge"  : { "Arch" : "NATHVM64"  },
          "d2.4xlarge"  : { "Arch" : "NATHVM64"  },
          "d2.8xlarge"  : { "Arch" : "NATHVM64"  },
          "hi1.4xlarge" : { "Arch" : "NATHVM64"  },
          "hs1.8xlarge" : { "Arch" : "NATHVM64"  },
          "cr1.8xlarge" : { "Arch" : "NATHVM64"  },
          "cc2.8xlarge" : { "Arch" : "NATHVM64"  }
        },
        "AWSRegionArch2AMI" : {
          "us-east-1"        : {"HVM64" : "ami-0b63040ee445728bf", "HVMG2" : "NOT_SUPPORTED"},
          "us-west-2"        : {"HVM64" : "ami-0b63040ee445728bf", "HVMG2" : "NOT_SUPPORTED"},
          "us-west-1"        : {"HVM64" : "ami-0b63040ee445728bf", "HVMG2" : "NOT_SUPPORTED"},
          "eu-west-1"        : {"HVM64" : "ami-0b63040ee445728bf", "HVMG2" : "NOT_SUPPORTED"},
          "eu-west-2"        : {"HVM64" : "ami-0b63040ee445728bf", "HVMG2" : "NOT_SUPPORTED"},
          "eu-west-3"        : {"HVM64" : "ami-0b63040ee445728bf", "HVMG2" : "NOT_SUPPORTED"},
          "eu-central-1"     : {"HVM64" : "ami-0b63040ee445728bf", "HVMG2" : "NOT_SUPPORTED"},
          "ap-northeast-1"   : {"HVM64" : "ami-0b63040ee445728bf", "HVMG2" : "NOT_SUPPORTED"},
          "ap-northeast-2"   : {"HVM64" : "ami-0b63040ee445728bf", "HVMG2" : "NOT_SUPPORTED"},
          "ap-northeast-3"   : {"HVM64" : "ami-0b63040ee445728bf", "HVMG2" : "NOT_SUPPORTED"},
          "ap-southeast-1"   : {"HVM64" : "ami-0b63040ee445728bf", "HVMG2" : "NOT_SUPPORTED"},
          "ap-southeast-2"   : {"HVM64" : "ami-0b63040ee445728bf", "HVMG2" : "NOT_SUPPORTED"},
          "ap-south-1"       : {"HVM64" : "ami-0b63040ee445728bf", "HVMG2" : "NOT_SUPPORTED"},
          "us-east-2"        : {"HVM64" : "ami-0b63040ee445728bf", "HVMG2" : "NOT_SUPPORTED"},
          "ca-central-1"     : {"HVM64" : "ami-0b63040ee445728bf", "HVMG2" : "NOT_SUPPORTED"},
          "sa-east-1"        : {"HVM64" : "ami-0b63040ee445728bf", "HVMG2" : "NOT_SUPPORTED"},
          "cn-north-1"       : {"HVM64" : "ami-0b63040ee445728bf", "HVMG2" : "NOT_SUPPORTED"},
          "cn-northwest-1"   : {"HVM64" : "ami-0b63040ee445728bf", "HVMG2" : "NOT_SUPPORTED"}
        }
    },    
    "Resources": {
        "NodeInstance": {
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "packages": {
                            "apt": {
                                "httpd": []
                            }
                        },
                        "commands": {
                            "01update_pkgs": {
                                "command": "apt-get update && apt-get upgrade -y"
                            },
                            "02next_command": {
                                "command": "echo the numbering here has to be in order... 01, 02, 03 and so on... last item is not comma'd"
                            }						
							
                        }
                    }
                }
            },
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": {
                                "Ref": "EBSVolumeSize"
                            }
                        }
                    }
                ],
                "ImageId": {
                    "Ref": "AMI"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "SecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "Subnet"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "InstanceName"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
								"#!/bin/bash -xe\n",
								"apt-get update\n",
								"apt-get -y install python-pip\n",
                                "curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg\n",
                                "install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/\n",
                                "sh -c 'echo \"deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main\" > /etc/apt/sources.list.d/vscode.list'\n",
                                "apt-get -y install nodejs\n",
								"apt-get -y install nodejs-legacy\n",
                                "apt-get -y install npm\n",
								"pip install awscli\n",
								"npm install -g @aws-amplify/cli\n",
                                "mkdir -p /var/www/html/example-app\n",
                                "groupadd www\n",
                                "usermod -a -G www ubuntu\n",
                                "chown -R ubuntu:www /var/www\n",
                                "chmod 2775 /var/www\n",
                                "find /var/www -type d -exec chmod 2775 {} +\n",
                                "find /var/www -type f -exec chmod 0664 {} +\n",
								"echo \"var http = require('http');\nvar port = 9500; // Must change IPTables also\n\" >> /var/www/html/example-app/server.js\n",
								"echo \"var server = http.createServer(function(request, response) {\n    response.setHeader('Content-Type', 'text/html');\n\" >> /var/www/html/example-app/server.js\n",
								"echo \"response.end('<h1>Node.js server is running!</h1>');\n});\nserver.listen(port, function() {\n    console.log('Node.js server listening on port: ' + port);\n});\n\nEOF\n\" >> /var/www/html/example-app/server.js\n",
                                "apt-get -y install nginx\n",
								"echo \"var http = require('http');\nvar port = 9500; // Must change IPTables also\n\" >> /var/www/html/example-app/server.js\n",
								"echo \"var server = http.createServer(function(request, response) {\n    response.setHeader('Content-Type', 'text/html');\n\" >> /var/www/html/example-app/server.js\n",
								"echo \"response.end('<h1>Node.js server is running!</h1>');\n});\nserver.listen(port, function() {\n    console.log('Node.js server listening on port: ' + port);\n});\n\nEOF\n\" >> /var/www/html/example-app/server.js\n",								
								"apt-get -y install sysv-rc-conf\n",
                                "sysv-rc-conf --level 2345 nginx on\n",
                                "npm install pm2 -g\n",
                                "pm2 startup -u ubuntu --hp /home/ubuntu\n",
                                "pm2 save\n",							
								"apt-get -y install ubuntu-desktop\n",
                                "apt-get -y install gnome-panel\n",
								"apt-get -y install gnome-settings-daemon\n",
								"apt-get -y install metacity\n",
								"apt-get -y install nautilus\n",
								"apt-get -y install gnome-terminal\n",
                                "apt-get -y install xrdp\n",
                                "apt-get -y install chromium-browser\n",
								"apt-get -y install gdm3\n",
								"sudo /etc/init.d/gdm3 start\n",
                                "/usr/local/bin/cfn-init --region ", { "Ref" : "AWS::Region" },
                                "    -s ", { "Ref" : "AWS::StackName" }, " -r NodeInstance ", "|| error_exit 'Failed to run cfn-init'\n",								
                                "\n"                                                               								
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
            },
        "EIPAddress": {
            "Type": "AWS::EC2::EIP"
        },
        "IPAssoc": {
            "Type": "AWS::EC2::EIPAssociation",
            "Properties": {
                "InstanceId": {
                    "Ref": "NodeInstance"
                },
                "EIP": {
                    "Ref": "EIPAddress"
                }
            }
        },
        "SecurityGroup": {
            "Properties": {
                "GroupDescription": "Allow RDP, SSH, HTTP, and HTTPS access",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "3389",
                        "IpProtocol": "tcp",
                        "ToPort": "3389"
                    }				
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        }
    }
}